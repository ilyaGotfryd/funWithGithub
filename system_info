#!/bin/bash

# sysinfo page. A script to produce an HTML file.
title="System information for"
right_now=$(date +"%x %r %Z")
TIME_STAMP="Updated on $right_now by $USER"


########## FUNCTIONS

system_info()
{
	cat << _SI_
	<h2>System release info</h2>
	<p>Function not yet implemented</p>
_SI_
}

show_uptime()
{
	cat << _UPT_
	<h2> System Uptime> </h2>
	<pre> $(uptime) </pre>
_UPT_
}

drive_space()
{
	cat << _DSPACE_
	<h2> File system space </h2>
	<pre> $(df) </pre>
_DSPACE_
}

home_space()
{

	if [ "$(id -u)" = "0" ]; then
	cat << _HSPACE_
	<h2> Home directory space by user </h2>
	<pre> $(du -s /home/* | sort -nr) </pre>
_HSPACE_
	fi
}

write_page()
{
cat <<- _EOF_
<html>
	<head>
	 <title>
		$title $HOSTNAME
	 </title>
	</head>
	<body>
		<h1>$title $HOSTNAME</h1>
		<p>$TIME_STAMP</p>
		$(system_info)
		$(show_uptime)
		$(drive_space)
		$(home_space)
	</body>
</html>
_EOF_
}

usage()
{
	echo "Usage info goes here"
}


interractive=
file_name=~/sysinfo_page.html

while [ "$1" != "" ]; do
	case $1 in
		-f | --file ) 	shift
				file_name=$1
				;;
		-i | --interractive ) interractive=1
				;;
		-h | --help )	usage
				exit
				;;
		* )		usage
				exit 1
				;;
	esac
	shift
done

if [ "$interractive" = "1" ]; then
	response=
	echo -n "Enter the file name >"
	read response
	if [ "$response" != "" ]; then
		file_name=$response
	fi
	
	if [ -f $file_name ]; then
		echo "Input file exists. Overrite? (y/n):"
		read response
		if [ "$response" != "y" ]; then
			echo "exiting program"
			exit 1
		fi
	fi

fi

echo "output filename = $file_name"

# weite page commented out until testing is complete

# write_page >$file_name
